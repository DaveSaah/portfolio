---
import { BlogPostDetailScreen } from '@/features/blog';
import { type LanguageCode } from '@/i18n/ui';
import { getCollection, getEntries, render } from 'astro:content';

let lang = 'en' as LanguageCode;

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog', ({ data }) => {
    return data.isDraft !== true && data.lang === 'en';
  });
  return blogEntries.map((post) => ({
    params: { slug: post.id },
    props: { post },
  }));
}

const { post } = Astro.props;
const baseRelatedPosts = post.data.relatedPosts
  ? await getEntries(post.data.relatedPosts)
  : [];

const enrichedRelatedPostsPromises = baseRelatedPosts.map(
  async (relatedEntry) => {
    if (!relatedEntry) return null;
    const { remarkPluginFrontmatter: relatedFm } = await render(relatedEntry);
    return {
      id: relatedEntry.id,
      slug: relatedEntry.id,
      collection: relatedEntry.collection,
      data: {
        ...relatedEntry.data,
        readingTimeMinutes: relatedFm.readingTimeMinutes,
      },
    };
  }
);
const finalRelatedPosts = (
  await Promise.all(enrichedRelatedPostsPromises)
).filter((p) => p !== null);

const { Content, remarkPluginFrontmatter } = await render(post);
---

<BlogPostDetailScreen
  post={{
    ...post.data,
    readingTimeMinutes: remarkPluginFrontmatter.readingTimeMinutes,
  }}
  lang={lang}
  relatedPosts={finalRelatedPosts}
  filePath={post.filePath ? post.filePath : ''}
>
  <Content />
</BlogPostDetailScreen>
